{
  "name": "Gameoflife",
  "tagline": "John Conway's famous Game of Life made into a Plug-and-Play widget",
  "body": "# Conway's Game of Life\r\n\r\n> The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.\r\n> The \"game\" is a zero-player game, meaning that its evolution is determined by its initial state, requiring no further input.\r\n> One interacts with the Game of Life by creating an initial configuration and observing how it evolves or, for advanced players, by creating patterns with particular properties.\r\n> ...[Read more in Wikipedia](https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life)\r\n\r\nCheck out the demo [HERE](http://jungkumseok.github.io/gameoflife)\r\n\r\n## Dependencies\r\n\r\nInsert the dependencies in the html\r\n\r\n* jQuery, Bootstrap, Font Awesome\r\n\r\n```html\r\n<head>\r\n  ...\r\n  \r\n  <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">\r\n  <link href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css\" rel=\"stylesheet\" crossorigin=\"anonymous\">\r\n  \r\n  <script src=\"https://code.jquery.com/jquery-2.2.1.min.js\" crossorigin=\"anonymous\"></script>\r\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\" crossorigin=\"anonymous\"></script>\r\n  \r\n  ...\r\n</head>\r\n```\r\n\r\n\r\n## How to use\r\n\r\nIncluding this Game of Life widget is extremely simple.\r\n\r\n### Step 1\r\n\r\nInclude the gameoflife.js in the *head* of your html document\r\n\r\n```html\r\n\r\n<head>\r\n  ...\r\n  <script src=\"https://cdn.rawgit.com/jungkumseok/gameoflife/master/gameoflife/src/conwaygameoflife.js\"></script>\r\n  \r\n</head>\r\n\r\n```\r\n\r\n### Step 2\r\n\r\nYou can load the Game of Life using any of the following methods:\r\n\r\n#### Method 1a (Recommended) : using <game-of-life> tag\r\n\r\nIn your html, use the <game-of-life></game-of-life> tag \r\n\r\n```html\r\n\r\n<body>\r\n\t<game-of-life></game-of-life>\r\n</body>\r\n\r\n```\r\n\r\n#### Method 1b : using CSS class\r\n\r\nOn your div element, use the css class *'game-of-life'* \r\n\r\n```html\r\n\r\n<body>\r\n\t<div class='game-of-life'></div>\r\n</body>\r\n\r\n```\r\n\r\n#### Method 2 : jQuery method\r\n\r\nIn your Javascript, use the jQuery method *$(element).GameOfLife()*\r\n\r\n```html\r\n\r\n<body>\r\n\t<div id='my_container'></div>\r\n\t\r\n\t<script>\r\n\t\t$('#my_container').GameOfLife();\r\n\t</script>\r\n</body>\r\n\r\n```\r\n\r\n\r\n#### Method 3 : pure javascript\r\n\r\nIn your Javascript, use the *bindGameOfLife()* method\r\n\r\n```html\r\n\r\n<body>\r\n\t<div id='my_container'></div>\r\n\t\r\n\t<script>\r\n\t\tvar container = document.getElementById('my_container');\r\n\t\t\t bindGameOfLife(container);\r\n\t</script>\r\n</body>\r\n\r\n```\r\n\r\n### Step 3\r\n\r\nEnjoy :)\r\n\r\n\r\n## Future Update Plans\r\n\r\n1. Build Dynamic Preset Loader (data storage needed - possibly firebase)\r\n2. Build Dynamic \"Component\" Loader (data storage needed - possibly firebase)\r\n3. Modify 'zoom' behavior so that it does not clear the cells\r\n4. Add drag & select behavior for the cells",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}